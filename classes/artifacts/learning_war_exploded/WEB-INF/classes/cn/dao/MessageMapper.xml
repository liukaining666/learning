<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="cn.entity.Message">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="uid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="nid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="isread" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="content" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, nid, isread, content
  </sql>
  
  <select id="setMyMessageList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select m.*,u.username as username 
    
    from message m,user u
    where m.uid = #{uid,jdbcType=INTEGER}
    and m.uid=u.id
    order by m.id desc
  </select>
  
  <select id="getMyMessageList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select m.*,u.username as username 
    
    from message m,user u
    where m.nid = #{nid,jdbcType=INTEGER}
    and m.uid=u.id
    order by m.id desc
   
   
  </select>
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.entity.Message">
    insert into message (id, uid, nid, 
      isread, content)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{nid,jdbcType=INTEGER}, 
      #{isread,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.entity.Message">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="nid != null">
        nid,
      </if>
      <if test="isread != null">
        isread,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="nid != null">
        #{nid,jdbcType=INTEGER},
      </if>
      <if test="isread != null">
        #{isread,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.entity.Message">
    update message
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="nid != null">
        nid = #{nid,jdbcType=INTEGER},
      </if>
      <if test="isread != null">
        isread = #{isread,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.entity.Message">
    update message
    set uid = #{uid,jdbcType=INTEGER},
      nid = #{nid,jdbcType=INTEGER},
      isread = #{isread,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>